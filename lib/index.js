// Generated by CoffeeScript 1.9.2
var Emitter, gciprinter, gcprinter, isReady, isSecureSite, loadScript, loadScriptOnce, win;

Emitter = require('emitter');

loadScriptOnce = require('load-script-once');

loadScript = require('load-script');

win = window;

isReady = false;

isSecureSite = win.location.protocol.indexOf("https") >= 0;


/**
 * gciprinter
 */

gciprinter = (function() {
  gciprinter.prototype.doc = win.document;

  gciprinter.prototype.key = 'new';

  gciprinter.prototype.api = 'https://clientapi.gsn2.com/api/v1/ShoppingList//CouponPrint';

  gciprinter.prototype.hasInit = false;

  gciprinter.prototype.isDebug = false;

  function gciprinter() {
    var myHtml, sc, scExtension;
    sc = "//cdn.cpnscdn.com/static/libraries/js/printcontrol_v3";
    scExtension = self.isDebug ? ".js" : ".min.js";
    loadScriptOnce("" + sc + scExtension, function() {
      return gcprinter.init();
    });
    if (!isReady) {
      myHtml = '<input type="hidden" id="https-supported" name="https-supported" value="true">';
      document.write("<!--[if (lte IE 9) & (cpbrkpie) & (gte cpbrkpie 5.0200)]>\n" + myHtml + "\n<![endif]-->");
    }
  }

  gciprinter.prototype.printCallback = function(svrRsp) {
    var evt;
    if (svrRsp.Success) {
      evt = {
        cancel: false,
        data: svrRsp
      };
      gcprinter.emit('printing', evt);
      if (!evt.cancel) {
        return gcprinter.printWithToken(svrRsp.Token);
      }
    } else {
      return gcprinter.emit('printfail', svrRsp);
    }
  };

  gciprinter.prototype.print = function(siteId, coupons) {
    var deviceId, payload;
    if (!self.hasInit) {
      return false;
    }
    win.gcprinterCallback = self.printCallback;
    deviceId = self.getDeviceId();
    payload = encodeURIComponent(coupons.join(','));
    loadScript(self.api + "/" + self.siteId + "/" + deviceId + "?callback=gcprinterCallback&coupons=" + payload);
    return true;
  };

  gciprinter.prototype.printWithToken = function(printToken) {
    var self;
    self = this;
    COUPONSINC.printcontrol.printCoupons(printToken, function(e) {
      return gcprinter.emit('printed', e);
    });
    return self;
  };

  gciprinter.prototype.checkInstall = function(fnSuccess, fnFail) {
    var fn;
    fn = COUPONSINC.printcontrol.installCheck(self.key);
    jQuery.when(fn).then(fnSuccess, fnFail);
    return this;
  };

  gciprinter.prototype.hasPlugin = function() {
    return COUPONSINC.printcontrol.isPrintControlInstalled();
  };

  gciprinter.prototype.getDeviceId = function() {
    return COUPONSINC.printcontrol.getDeviceID();
  };

  gciprinter.prototype.init = function() {
    var cb, fn;
    if (!gcprinter.hasInit && (typeof COUPONSINC !== "undefined" && COUPONSINC !== null)) {
      COUPONSINC.printcontrol.init(self.key, isSecureSite);
      fn = COUPONSINC.printcontrol.init(self.key, isSecureSite);
      cb = function() {
        return gcprinter.hasInit = true;
      };
      return jQuery.when(fn).done(cb);
    }
  };

  return gciprinter;

})();

Emitter(gciprinter.prototype);

gcprinter = new gciprinter();

jQuery(document).ready(function() {
  isReady = true;
  return gcprinter.init();
});

win.gcprinter = gcprinter;

module.exports = gcprinter;
